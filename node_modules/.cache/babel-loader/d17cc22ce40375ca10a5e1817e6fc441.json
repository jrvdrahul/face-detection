{"ast":null,"code":"import _classCallCheck from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/code/face-recog/src/components/Sidebar/Sidebar.jsx\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, CardTitle, Collapse, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Media, NavbarBrand, Navbar, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\";\nimport LogoImage from \"../../assets/img/Alpha_Fotress_logo.svg\";\nvar ps;\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n    _this.state = {\n      collapseOpen: false\n    };\n\n    _this.toggleCollapse = function () {\n      _this.setState({\n        collapseOpen: !_this.state.collapseOpen\n      });\n    };\n\n    _this.closeCollapse = function () {\n      _this.setState({\n        collapseOpen: false\n      });\n    };\n\n    _this.createLinks = function (routes) {\n      return routes.map(function (prop, key) {\n        return React.createElement(NavItem, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: prop.layout + prop.path,\n          tag: NavLinkRRD,\n          onClick: _this.closeCollapse,\n          activeClassName: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: prop.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), prop.name));\n      });\n    };\n\n    _this.activeRoute.bind(_assertThisInitialized(_this));\n\n    return _this;\n  } // verifies if routeName is the one active (in browser input)\n\n\n  _createClass(Sidebar, [{\n    key: \"activeRoute\",\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    } // toggles collapse between opened and closed (true/false)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          routes = _this$props.routes,\n          logo = _this$props.logo;\n      var navbarBrandProps;\n\n      if (logo && logo.innerLink) {\n        navbarBrandProps = {\n          to: logo.innerLink,\n          tag: Link\n        };\n      } else if (logo && logo.outterLink) {\n        navbarBrandProps = {\n          href: logo.outterLink,\n          target: \"_blank\"\n        };\n      }\n\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["/code/face-recog/src/components/Sidebar/Sidebar.jsx"],"names":["React","NavLink","NavLinkRRD","Link","PropTypes","Button","Card","CardHeader","CardBody","CardTitle","Collapse","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","Media","NavbarBrand","Navbar","NavItem","Nav","Progress","Table","Container","Row","Col","ps","Sidebar","props","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","layout","path","icon","name","activeRoute","bind","routeName","location","pathname","indexOf","bgColor","logo","navbarBrandProps","innerLink","to","tag","outterLink","href","target","Component","defaultProps","propTypes","arrayOf","object","shape","string","imgSrc","isRequired","imgAlt"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Table,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\nimport LogoImage from \"../../assets/img/Alpha_Fotress_logo.svg\";\nvar ps;\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n  render() {\n    const { bgColor, routes, logo } = this.props;\n    let navbarBrandProps;\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n    return <></>;\n  }\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}