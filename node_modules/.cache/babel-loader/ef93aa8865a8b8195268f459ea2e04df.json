{"ast":null,"code":"import _classCallCheck from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/code/face-recog/src/views/examples/Identify.jsx\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, Container, Row, Col, Button, FormGroup, Input } from \"reactstrap\";\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from \"axios\";\nimport Webcam from \"react-webcam\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _this.setRef = function (webcam) {\n      _this.webcam = webcam;\n    };\n\n    _this.capture = function () {\n      var imageSrc = _this.webcam.getScreenshot();\n\n      _this.setState({\n        image: imageSrc\n      });\n    };\n\n    _this.state = {\n      modal: false\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"submit\",\n    value: function submit() {\n      var b64toBlob = function b64toBlob(b64Data) {\n        var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n        var sliceSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;\n        var byteCharacters = window.atob(b64Data.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\"));\n        var byteArrays = [];\n\n        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n          var slice = byteCharacters.slice(offset, offset + sliceSize);\n          var byteNumbers = new Array(slice.length);\n\n          for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n          }\n\n          var byteArray = new Uint8Array(byteNumbers);\n          byteArrays.push(byteArray);\n        }\n\n        var blob = new Blob(byteArrays, {\n          type: contentType\n        });\n        return blob;\n      };\n\n      var formData = new FormData();\n      formData.append(\"frontSide\", b64toBlob(this.state.image, \"image/jpeg\"));\n      formData.append(\"docketId\", this.state.docketId);\n      var data = {\n        name: this.state.name,\n        userData: this.state.userData\n      };\n      axios.post(\"http://192.168.1.160:5000/api/v1/person/\", data).then(function (response) {\n        console.log(\"res\", response);\n        var data = response.data.personId;\n        window.location = \"http://localhost:8001/admin/face-verification/\" + data;\n      }).catch(function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var instruction = this.state.instruction;\n      return React.createElement(React.Fragment, null, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"mb-5 mb-xl-0\",\n        xl: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Identify Person\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Webcam, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.submit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Submit\"))))))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/code/face-recog/src/views/examples/Identify.jsx"],"names":["React","Card","CardHeader","CardBody","Container","Row","Col","Button","FormGroup","Input","Header","axios","Webcam","Index","props","setRef","webcam","capture","imageSrc","getScreenshot","setState","image","state","modal","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","window","atob","replace","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","formData","FormData","append","docketId","data","name","userData","post","then","response","console","log","personId","location","catch","error","instruction","submit","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  Button,\n  FormGroup,\n  Input\n} from \"reactstrap\";\nimport Header from \"components/Headers/Header.jsx\";\nimport axios from \"axios\";\nimport Webcam from \"react-webcam\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n  }\n\n  setRef = webcam => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.setState({ image: imageSrc });\n  };\n\n  submit() {\n    const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\n      const byteCharacters = window.atob(\n        b64Data.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\")\n      );\n      const byteArrays = [];\n\n      for (\n        let offset = 0;\n        offset < byteCharacters.length;\n        offset += sliceSize\n      ) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n      }\n\n      const blob = new Blob(byteArrays, { type: contentType });\n      return blob;\n    };\n\n    let formData = new FormData();\n    formData.append(\"frontSide\", b64toBlob(this.state.image, \"image/jpeg\"));\n\n    formData.append(\"docketId\", this.state.docketId);\n\n    const data = {\n      name: this.state.name,\n      userData: this.state.userData\n    };\n\n    axios\n      .post(\"http://192.168.1.160:5000/api/v1/person/\", data)\n      .then(response => {\n        console.log(\"res\", response);\n        const data = response.data.personId;\n        window.location =\n          \"http://localhost:8001/admin/face-verification/\" + data;\n      })\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  render() {\n    const instruction = this.state.instruction;\n    return (\n      <>\n        <Header />\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">Identify Person</Row>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col lg=\"6\">\n                      <FormGroup>\n                        <Webcam />\n                      </FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Button color=\"primary\" onClick={() => this.submit()}>\n                      Submit\n                    </Button>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}