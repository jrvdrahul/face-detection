{"ast":null,"code":"import _classCallCheck from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/code/face-recog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/code/face-recog/src/views/examples/Identify.jsx\";\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, Container, Row, Col, FormGroup, Input, Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Header from \"components/Headers/Header.jsx\";\nimport \"../../assets/css/mainCustom.css\";\nimport axios from \"axios\";\nimport Webcam from \"react-webcam\";\nimport GlobalConfig from \"../../config\";\nimport Loader from \"./Loader\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _this.setRef = function (webcam) {\n      _this.webcam = webcam;\n    };\n\n    _this.capture = function () {\n      var imageSrc = _this.webcam.getScreenshot();\n\n      _this.setState({\n        image: imageSrc\n      });\n    };\n\n    _this.state = {\n      modal: false,\n      data: [],\n      loader: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"loader\",\n    value: function loader() {\n      if (this.state.loader) {\n        return React.createElement(Loader, {\n          message: \"Identifying Person\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      var _this2 = this;\n\n      this.setState({\n        loader: true\n      });\n\n      var b64toBlob = function b64toBlob(b64Data) {\n        var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n        var sliceSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;\n        var byteCharacters = window.atob(b64Data.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\"));\n        var byteArrays = [];\n\n        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n          var slice = byteCharacters.slice(offset, offset + sliceSize);\n          var byteNumbers = new Array(slice.length);\n\n          for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n          }\n\n          var byteArray = new Uint8Array(byteNumbers);\n          byteArrays.push(byteArray);\n        }\n\n        var blob = new Blob(byteArrays, {\n          type: contentType\n        });\n        return blob;\n      };\n\n      var formData = new FormData();\n      formData.append(\"file\", b64toBlob(this.state.image, \"image/jpeg\"));\n      axios.post(\"https://tmonkey.broker.alphafortress.com/api/file\", formData).then(function (response) {\n        var imgurl = \"https://tmonkey.broker.alphafortress.com/api/file/\" + response.data.name;\n        axios.post(GlobalConfig.backendURL + \"/api/v1/detectandidentify/\", {\n          imageURL: imgurl\n        }).then(function (response) {\n          _this2.setState({\n            data: response.data.candidate,\n            loader: false,\n            modal: true\n          });\n        }).catch(function (error) {\n          _this2.setState({\n            error: \"No face Detected\",\n            loader: false,\n            modal: true\n          });\n\n          throw error;\n        });\n      }).catch(function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: \"image\",\n    value: function image() {\n      if (this.state.image) {\n        return React.createElement(\"img\", {\n          src: this.state.image,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      } else {\n        var videoConstraints = {\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        };\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Webcam, {\n          className: \"video-identify\",\n          style: {\n            transform: \"rotatey(180deg)\"\n          },\n          audio: false,\n          height: \"auto\",\n          ref: this.setRef,\n          screenshotFormat: \"image/jpeg\",\n          width: 700,\n          videoConstraints: videoConstraints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: this.capture,\n          style: {\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, \"Capture photo\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, this.state.data));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var instruction = this.state.instruction;\n      var videoConstraints = {\n        width: 1280,\n        height: 720,\n        facingMode: \"user\"\n      };\n      return React.createElement(React.Fragment, null, React.createElement(Container, {\n        className: \"mt--7\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.loader(), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"mb-5 mb-xl-0\",\n        xl: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"bg-transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Identify Person\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.image()))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.submit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Submit\")))))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Person Identify Complete\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.state.error ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.state.error) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Name-: \", this.state.data.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Confidence-: \", this.state.data.confidence * 100, \" %\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Cancel\")))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/code/face-recog/src/views/examples/Identify.jsx"],"names":["React","Card","CardHeader","CardBody","Container","Row","Col","FormGroup","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Header","axios","Webcam","GlobalConfig","Loader","Index","props","setRef","webcam","capture","imageSrc","getScreenshot","setState","image","state","modal","data","loader","toggle","bind","prevState","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","window","atob","replace","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","formData","FormData","append","post","then","response","imgurl","name","backendURL","imageURL","candidate","catch","error","videoConstraints","width","height","facingMode","transform","display","instruction","submit","className","confidence","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Container,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport Header from \"components/Headers/Header.jsx\";\nimport \"../../assets/css/mainCustom.css\";\nimport axios from \"axios\";\nimport Webcam from \"react-webcam\";\nimport GlobalConfig from \"../../config\";\nimport Loader from \"./Loader\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      data: [],\n      loader: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  loader() {\n    if (this.state.loader) {\n      return <Loader message=\"Identifying Person\" />;\n    }\n  }\n\n  setRef = webcam => {\n    this.webcam = webcam;\n  };\n\n  capture = () => {\n    const imageSrc = this.webcam.getScreenshot();\n    this.setState({ image: imageSrc });\n  };\n\n  submit() {\n    this.setState({\n      loader: true\n    });\n\n    const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\n      const byteCharacters = window.atob(\n        b64Data.replace(/^data:image\\/(png|jpeg|jpg);base64,/, \"\")\n      );\n      const byteArrays = [];\n\n      for (\n        let offset = 0;\n        offset < byteCharacters.length;\n        offset += sliceSize\n      ) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n      }\n\n      const blob = new Blob(byteArrays, { type: contentType });\n      return blob;\n    };\n\n    let formData = new FormData();\n    formData.append(\"file\", b64toBlob(this.state.image, \"image/jpeg\"));\n\n    axios\n      .post(\"https://tmonkey.broker.alphafortress.com/api/file\", formData)\n      .then(response => {\n        const imgurl =\n          \"https://tmonkey.broker.alphafortress.com/api/file/\" +\n          response.data.name;\n\n        axios\n          .post(GlobalConfig.backendURL + \"/api/v1/detectandidentify/\", {\n            imageURL: imgurl\n          })\n          .then(response => {\n            this.setState({\n              data: response.data.candidate,\n              loader: false,\n              modal: true\n            });\n          })\n          .catch(error => {\n            this.setState({\n              error: \"No face Detected\",\n              loader: false,\n              modal: true\n            });\n            throw error;\n          });\n      })\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  image() {\n    if (this.state.image) {\n      return <img src={this.state.image} alt=\"\" />;\n    } else {\n      const videoConstraints = {\n        width: 1280,\n        height: 720,\n        facingMode: \"user\"\n      };\n      return (\n        <div>\n          <Webcam\n            className=\"video-identify\"\n            style={{ transform: \"rotatey(180deg)\" }}\n            audio={false}\n            height={\"auto\"}\n            ref={this.setRef}\n            screenshotFormat=\"image/jpeg\"\n            width={700}\n            videoConstraints={videoConstraints}\n          />\n\n          <Button onClick={this.capture} style={{ display: \"block\" }}>\n            Capture photo\n          </Button>\n          <div>{this.state.data}</div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const instruction = this.state.instruction;\n    const videoConstraints = {\n      width: 1280,\n      height: 720,\n      facingMode: \"user\"\n    };\n    return (\n      <>\n        <Container className=\"mt--7\" fluid>\n          {this.loader()}\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n              <Card className=\"shadow\">\n                <CardHeader className=\"bg-transparent\">\n                  <Row className=\"align-items-center\">Identify Person</Row>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col lg=\"12\">\n                      <FormGroup>{this.image()}</FormGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Button color=\"primary\" onClick={() => this.submit()}>\n                      Submit\n                    </Button>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>\n              Person Identify Complete\n            </ModalHeader>\n            <ModalBody>\n              {this.state.error ? (\n                <div>{this.state.error}</div>\n              ) : (\n                <div>\n                  <div>Name-: {this.state.data.name}</div>\n                  <div>Confidence-: {this.state.data.confidence * 100} %</div>\n                </div>\n              )}\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}